#include "<df>/dragonfruit.h"
#include "<inc>/HALLog.h"

#include "<inc>/KeCrash.h"

#include "<inc>/KeSecurity.h"

#include "<inc>/KeDPC.h"
#include "<inc>/KeTime.h"
#include "<inc>/KeDispatch.h"
#include "<inc>/KeTimer.h"

#include "<inc>/KeProcess.h"

buffer KeProcessKernelThreadIdle KeThread_SIZEOF

buffer KeThreadQuantumDPC KeDPC_SIZEOF
public KeThreadQuantumDPC

extern KeIdleThread { -- }

extern KeThreadQuantumDPCFunction { -- }

fn KeThreadInit { -- }
	auto ok

	0 0 pointerof KeIdleThread "idle" KeProcessKernelThreadIdle KeThreadWorkerInitialize ok!

	if (ok@)
		ok@ "KeThreadInit: couldn't initialize kernel idle thread (%i)\n" KeCrash
	end

	PRIORITY_IDLE KeProcessKernelThreadIdle KeThread_Priority + !

	THREADSTATUS_READY KeProcessKernelThreadIdle KeThread_Status + !

	QUEUEBACK KeProcessKernelThreadIdle KeThreadEnqueue

	pointerof KeThreadQuantumDPCFunction KeThreadQuantumDPC KeDPCInitialize ok!

	if (ok@)
		ok@ "KeThreadInit: couldn't initialize quantum end DPC\n" KeCrash
	end
end