#include "<df>/dragonfruit.h"
#include "<inc>/HALLog.h"

#include "<inc>/KeCrash.h"

#include "<inc>/KeMem.h"

externptr HALLoaderPFDB

externptr HALLoaderInitialBitmap

externptr HALLoaderInitialBitmapSize

externptr HALLoaderTotalRAM

externptr HALLoaderHeap

externptr HALLoaderHeapSize

var KeMemPageFrameDB 0
public KeMemPageFrameDB

var KeMemPageFreeListHead 0
public KeMemPageFreeListHead

table KeMemBuckets[BUCKETS]
public KeMemBuckets

var KeMemPageTotal 0
public KeMemPageTotal

var KeMemPageFreeCount 0
public KeMemPageFreeCount

var KeMemHeapSize 0
public KeMemHeapSize

var KeMemHeapBytesFree 0
public KeMemHeapBytesFree

var KeMemHeap 0
public KeMemHeap

fn KeMemInit { -- }
	auto ptr

	HALLoaderPFDB@ dup KeMemPageFrameDB! ptr!

	auto i
	0 i!

	auto pages
	HALLoaderTotalRAM@ 12 >> pages!

	auto bmp
	HALLoaderInitialBitmap@ bmp!

	auto sz
	HALLoaderInitialBitmapSize@ 32 * sz!

	auto word

	auto last
	0 last!

	// initialize the page DB by linking all of the entries into the
	// free list, except those marked allocated in the loader bitmap.

	while (i@ pages@ <)
		if (i@ sz@ <)
			if (i@ 31 & ~~)
				bmp@@ word!
				4 bmp +=
			end

			if (word@ i@ 31 & bitget ~~)
				1 KeMemPageFreeCount +=

				if (last@)
					ptr@ last@ PFDBEFree_Next + !
				end else
					ptr@ KeMemPageFreeListHead!
				end

				ptr@ last!
			end
		end else
			1 KeMemPageFreeCount +=

			if (last@)
				ptr@ last@ PFDBEFree_Next + !
			end else
				ptr@ KeMemPageFreeListHead!
			end

			ptr@ last!
		end

		i@ ptr@ PFDBE_PFN + !

		PFDBE_SIZEOF ptr +=
		1 i +=
	end

	KeMemPageFreeCount@ KeMemPageTotal!

	// initialize the heap as one block on the free list

	HALLoaderHeap@ ptr!

	KEMEMBLOCKMAGIC ptr@ KeMemBlock_Magic + !
	0 ptr@ KeMemBlock_Next + !
	0 ptr@ KeMemBlock_Prev + !
	KEMEMBLOCKFREE ptr@ KeMemBlock_Tag + !

	0 i!
	1 BUCKETSPO2START << sz!
	0 word!

	while (i@ BUCKETS <)
		if (HALLoaderHeapSize@ sz@ ==)
			i@ ptr@ KeMemBlock_BucketIndex + !

			// found the correct bucket
			ptr@ [i@]KeMemBuckets!

			1 word!

			break
		end

		1 sz <<=
		1 i +=
	end

	HALLoaderHeapSize@ KeMemHeapSize!
	HALLoaderHeapSize@ KeMemHeapBytesFree!
	HALLoaderHeap@ KeMemHeap!

	if (word@ ~~)
		"KeMemInit: couldn't initialize heap bucket\n" KeCrash
	end

	"Pre-boot memory statistics:\n" "KeMemInit" HALLog

	KeMemUsageDump
end

fn KeMemUsageDump { -- }
	"AVAIL" "TOTAL" "MEMORY" "  %12s %12s %12s\n" Printf

	"Page Frames" "  %12s " Printf
	KeMemPageTotal@ "%12d " Printf
	KeMemPageFreeCount@ "%12d\n" Printf

	"Heap Bytes" "  %12s " Printf
	KeMemHeapSize@ "%12d " Printf
	KeMemHeapBytesFree@ "%12d\n" Printf
end