#include "<df>/dragonfruit.h"
#include "<inc>/HALLog.h"

#include "<inc>/KeCrash.h"
#include "<inc>/KeIPL.h"

#include "<inc>/KeMemAlloc.h"

#include "<inc>/HALRTC.h"

#include "<inc>/KeTimer.h"

extern KeInterruptInit { -- }

extern KeMemInit { -- }

extern KeTimerInit { -- }

extern KeSecurityInit { -- }

extern KeProcessInit { -- }

extern HALCPUHalt { -- }

externptr KeMemPageFreeCount

buffer TestTimer KeTimer_SIZEOF

buffer TestTimer2 KeTimer_SIZEOF

buffer TestTimer3 KeTimer_SIZEOF

buffer TestTimer4 KeTimer_SIZEOF

fn (DPCFunction) TestTimerFunction { context1 context2 -- }
	context1@ context2@ "timer=%x interval=%dms\n" Printf

	if (context1@ ~~)
		"pee\n" KeCrash
	end

	context1@ context2@ context1@ context2@ KeTimerEnqueue drop
end

fn KeMain { -- ret }
	// early init that takes place in IPLHIGH, before there's a process context

	pointerof TestTimerFunction TestTimer KeTimerInitialize

	pointerof TestTimerFunction TestTimer2 KeTimerInitialize

	pointerof TestTimerFunction TestTimer3 KeTimerInitialize

	pointerof TestTimerFunction TestTimer4 KeTimerInitialize

	KeInterruptInit

	KeTimerInit

	KeMemInit

	IPLLOW KeIPLLower

	"Hello Andromeda World!\n" "KeMain" HALLog

	KeSecurityInit

	KeProcessInit

	2000 TestTimer 2000 TestTimer KeTimerEnqueue drop

	1500 TestTimer2 1500 TestTimer2 KeTimerEnqueue drop

	1000 TestTimer3 1000 TestTimer3 KeTimerEnqueue drop

	500 TestTimer4 500 TestTimer4 KeTimerEnqueue drop

	KeMemPageFreeCount@ 12 << 1024 / "%dKB memory available.\n" "KeMain" HALLog

	while (1)
		HALCPUHalt
	end

	"Test BSOD\n" KeCrash

	0 ret!
end