#include "<df>/dragonfruit.h"

#include "<inc>/OSCalls.h"
#include "<inc>/OSMap.h"
#include "<inc>/OSAccess.h"
#include "<inc>/OSFile.h"
#include "<inc>/OSObject.h"
#include "<inc>/OSEnvironment.h"
#include "<inc>/OSStatus.h"
#include "<inc>/OSAbort.h"
#include "<inc>/OSModule.h"

#include "OSDLL.h"

fnptr EntryPoint { -- }

fn DLLMain { -- }
	// initialize the process image by mapping its sections into the address
	// space and dynamically linking it if necessary.

	// SystemInit.exe is a special case where no image file name is given in
	// the PEB.

	auto ok

	auto imagepath
	OSPEB OSPEBs_Parameters + @ imagepath!

	if (imagepath@ ~~)
		// this is SystemInit.exe

		OSPEB OSPEBs_Parameters + 4 + imagepath!
		imagepath@ OSPEB OSPEBs_Parameters + !

		imagepath@ // dest
		"/mintia/SystemInit.exe" // src
		strcpy

		1 OSPEB OSPEBs_ParameterCount + !

		OSNONE OSPEB OSPEBs_StdIn + !
		OSNONE OSPEB OSPEBs_StdOut + !
		OSNONE OSPEB OSPEBs_StdErr + !

		// initialize current directory as /

		OSNONE OSPEB OSPEBs_CurrentDirectory + !

		"/" // env
		"PWD" // name
		OSSetEnvironmentVariable drop
	end

	// load process image

	auto dll

	imagepath@ // name
	OSModuleLoad ok! dll!

	if (ok@)
		ok@ OSStatusGetName "failed to load process image: %s\n" OSAbort
	end

	auto address

	"Main" // name
	dll@ // dll
	OSGetSymbolAddress ok! address!

	if (ok@)
		ok@ OSStatusGetName "couldn't find Main symbol: %s\n" OSAbort
	end

	address@ EntryPoint

	while (1)
	end
end