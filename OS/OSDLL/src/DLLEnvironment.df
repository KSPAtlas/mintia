#include "<df>/dragonfruit.h"

#include "<inc>/OSCalls.h"
#include "<inc>/OSMap.h"
#include "<inc>/OSAccess.h"
#include "<inc>/OSFile.h"
#include "<inc>/OSPEB.h"
#include "<inc>/OSObject.h"
#include "<inc>/OSEnvironment.h"

fn OSFindEnvironmentVariable { name -- entry env ok }
	auto p
	OSPEB OSPEBs_Environment + p!

	auto endp
	p@ OSENVIRONMENTSIZE + endp!

	-1 ok!

	while (p@ endp@ <)
		if (p@ gb)
			p@ entry!

			while (p@ gb)
				if (p@ gb '=' ==)
					if (entry@ name@ p@ entry@ - strncmp)
						p@ 1 + env!

						0 ok!

						return
					end else
						while (p@ gb)
							1 p +=

							if (p@ endp@ >=)
								return
							end
						end

						break
					end
				end

				1 p +=

				if (p@ endp@ >=)
					return
				end
			end
		end else
			1 p +=
		end
	end
end

fn OSGetEnvironmentVariable { env name bufsize -- ok }
	auto buf
	name@ OSFindEnvironmentVariable ok! buf! drop

	if (ok@)
		return
	end

	env@ // dest
	buf@ // src
	bufsize@ 1 - // max
	strncpy
end

fn OSSetEnvironmentVariable { env name -- ok }
	auto envlen
	env@ strlen envlen!

	auto namelen
	name@ strlen namelen!

	auto requiredlen
	envlen@ namelen@ + requiredlen!
	1 requiredlen += // for the equals sign

	auto buf
	name@ OSFindEnvironmentVariable ok! drop buf!

	if (ok@ ~~)
		// already set, see if the spot is big enough

		if (buf@ strlen requiredlen@ >=)
			// yup, overwrite it

			buf@ // dest
			name@ // name
			strcpy

			'=' buf@ namelen@ + sb

			buf@ namelen@ + 1 + // dest
			env@ // src
			strcpy

			return
		end else
			// nope, murder it

			buf@ strzero
		end
	end

	auto p
	OSPEB OSPEBs_Environment + p!

	auto endp
	p@ OSENVIRONMENTSIZE + endp!

	2 requiredlen += // for the zero after and maybe a zero before

	auto foundlen
	0 foundlen!

	p@ buf!

	while (p@ endp@ <)
		if (p@ gb)
			p@ 2 + buf!
			0 foundlen!
		end else
			1 foundlen +=

			if (foundlen@ requiredlen@ >=)
				// found a spot, write it

				0 ok!

				buf@ // dest
				name@ // name
				strcpy

				'=' buf@ namelen@ + sb

				buf@ namelen@ + 1 + // dest
				env@ // src
				strcpy

				return
			end
		end

		1 p +=
	end
end