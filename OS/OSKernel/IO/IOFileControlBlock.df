#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALDebug.h"
#include "<inc>/HALDriver.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/Object.h"

#include "<inc>/Process.h"

#include "<inc>/Security.h"

#include "<inc>/IO.h"

#include "<ll>/OSDLL/OS.h"

fn IOFileControlBlockCreate { dispatchtable devobj filetype flags -- fcb ok }
	IOFileControlBlock_SIZEOF // bytes
	'IOFC' // tag
	MmAllocWithTag ok! fcb!

	if (ok@)
		return
	end

	devobj@ fcb@ IOFileControlBlock_DeviceObject + !
	filetype@ fcb@ IOFileControlBlock_FileType + !

	flags@ fcb@ IOFileControlBlock_Flags + !
	0 fcb@ IOFileControlBlock_CacheInfoBlock + !
	0 fcb@ IOFileControlBlock_References + !
	0 fcb@ IOFileControlBlock_SizeInBytes + !
	dispatchtable@ fcb@ IOFileControlBlock_DispatchTable + !
	0 fcb@ IOFileControlBlock_Busy + !
	0 fcb@ IOFileControlBlock_ParseCount + !

	"FCBMutex" // name
	KERNELMODE // mode
	fcb@ IOFileControlBlock_Mutex + // mutex
	KeMutexInitialize ok!

	if (ok@)
		"IOFileControlBlockCreate: mutex initialization failed\n" KeCrash
	end

	"FCBIOMutex" // name
	KERNELMODE // mode
	fcb@ IOFileControlBlock_IOMutex + // mutex
	KeMutexInitialize ok!

	if (ok@)
		"IOFileControlBlockCreate: IO mutex initialization failed\n" KeCrash
	end
end

fn IOFileControlBlockDelete { fcb -- }
	auto cacheblock
	fcb@ IOFileControlBlock_CacheInfoBlock + @ cacheblock!

	if (cacheblock@)
		"IOFileControlBlockDelete: TODO delete cache block\n" KeCrash
	end

	fcb@ MmFree
end

fn IOFileControlBlockLock { fcb -- ok }
	KERNELMODE // waitmode
	1 // alertable
	OSWAIT_TIMEOUTINFINITE // timeout
	fcb@ IOFileControlBlock_Mutex + // object
	KeThreadWaitForObject ok!
end

fn IOFileControlBlockUnlock { fcb -- }
	fcb@ IOFileControlBlock_Mutex + KeMutexRelease drop
end

fn IOFileControlBlockLockIO { fcb -- ok }
	KERNELMODE // waitmode
	1 // alertable
	OSWAIT_TIMEOUTINFINITE // timeout
	fcb@ IOFileControlBlock_IOMutex + // object
	KeThreadWaitForObject ok!
end

fn IOFileControlBlockUnlockIO { fcb -- }
	fcb@ IOFileControlBlock_IOMutex + KeMutexRelease drop
end

fn IOFileControlBlockReference { fcb -- oldcount }
	// should be called by filesystem driver in its parse method, if needed.

	auto rs
	HALCPUInterruptDisable rs!

	fcb@ IOFileControlBlock_References + @ oldcount!

	oldcount@ 1 + fcb@ IOFileControlBlock_References + !

	rs@ HALCPUInterruptRestore
end

fn IOFileControlBlockDereference { fcb -- oldcount }
	// should be called by filesystem driver in its delete method, if needed.

	auto rs
	HALCPUInterruptDisable rs!

	fcb@ IOFileControlBlock_References + @ oldcount!

	if (DEBUGCHECKS)
		if (oldcount@ 0 ==)
			"IOFileControlBlockDereference: refcount underflow\n" KeCrash
		end
	end

	oldcount@ 1 - fcb@ IOFileControlBlock_References + !

	rs@ HALCPUInterruptRestore
end

fn IOFileControlBlockCacheCheck { wantcaching fcb -- cacheblock ok }
	fcb@ IOFileControlBlockLock ok!

	if (ok@)
		return
	end

	fcb@ IOFileControlBlock_CacheInfoBlock + @ cacheblock!

	if (wantcaching@)
		if (cacheblock@ ~~)
			// still no cache block, plus we want there to be one.
			// therefore, initiate caching

			fcb@ // fcb
			IOCacheInitialize ok! cacheblock!

			if (ok@)
				// failed to initialize caching, do this I/O operation
				// uncached and try again later...

				0 cacheblock!
			end
		end
	end

	if (cacheblock@)
		// may or may not have wanted caching, but are getting it regardless.
		// unlock the FCB

		fcb@ IOFileControlBlockUnlock
	end

	// if we didn't want caching, and there was no cache block, the FCB remains locked
	// for the duration of the operation.
end

fn IOFileControlBlockAcquireCheck { flags fcb -- ok }
	fcb@ IOFileControlBlockLock ok!

	if (ok@)
		return
	end

	auto oldcount
	fcb@ IOFileControlBlockReference oldcount!

	auto cacheblock
	fcb@ IOFileControlBlock_CacheInfoBlock + @ cacheblock!

	if (flags@ OSFILEFLAG_NOCACHE &)
		if (oldcount@ 0 ==)
			if (cacheblock@)
				// we can destroy the cacheblock!

				"IOFileControlBlockAcquireCheck: TODO: destroy the cache block\n" KeCrash
			end
		end
	end

	fcb@ IOFileControlBlockUnlock
end