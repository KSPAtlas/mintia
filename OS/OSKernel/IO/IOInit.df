#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALDebug.h"
#include "<inc>/HALDriver.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/Object.h"

#include "<inc>/Process.h"

#include "<inc>/Security.h"

#include "<inc>/IO.h"

#include "<ll>/OSDLL/OS.h"

externptr HALLoaderInfo
externptr HALLoaderBootDeviceName

var IODevicesDirectoryObject 0
public IODevicesDirectoryObject

var IODeviceTypeObject 0
public IODeviceTypeObject

var IOFileTypeObject 0
public IOFileTypeObject

var IOBootDevice 0
public IOBootDevice

buffer IOMountListMutex KeMutex_SIZEOF
public IOMountListMutex

fn IOInitPhase1 { -- }
	auto ok
	auto handle

	// create Devices directory object

	ACCESS_OWNER_ALL ACCESS_GROUP_ALL | ACCESS_WORLD_READ | ACCESS_WORLD_EXEC | // permissions
	"Devices" // name
	ObDirectoryCreatePermanent ok! handle!

	if (ok@)
		ok@ "IOInitPhase1: couldn't create /Devices directory object (%i)\n" KeCrash
	end

	ObTypeDirectoryType@ // type (directory)
	handle@ // handle
	ObObjectReferenceByHandle ok! IODevicesDirectoryObject! drop

	if (ok@)
		ok@ "IOInitPhase1: couldn't reference /Devices directory object (%i)\n" KeCrash
	end

	handle@ ObObjectClose ok!

	if (ok@)
		ok@ "IOInitPhase1: couldn't close /Devices directory object (%i)\n" KeCrash
	end

	IODevicesDirectoryObject@ ObHeader_SIZEOF - // object
	ObRootDirectoryObject@ // directory
	ObDirectoryInsertByPointers ok!

	if (ok@)
		ok@ "IOInitPhase1: couldn't insert /Devices directory object into root directory (%i)\n" KeCrash
	end

	// create Device type

	auto type

	auto typeinit
	ObTypeInitializer_SIZEOF alloc typeinit!

	// initialize ObTypeInitializer fields

	typeinit@ ObTypeInitializerInitialize

	pointerof IOParse typeinit@ ObTypeInitializer_ParseFunction + !

	// create Device type

	"Device" typeinit@ ObTypeInitializer_Name + !
	'Devi'   typeinit@ ObTypeInitializer_Tag + !
	0        typeinit@ ObTypeInitializer_BodySize + !
	typeinit@ ObTypeCreate ok! type!

	if (ok@)
		ok@ "IOInitPhase1: couldn't create Device type (%i)\n" KeCrash
	end

	type@ IODeviceTypeObject!

	// create File type

	"File" typeinit@ ObTypeInitializer_Name + !
	'File' typeinit@ ObTypeInitializer_Tag + !
	0 typeinit@ ObTypeInitializer_BodySize + !
	pointerof IOFileOpenObject typeinit@ ObTypeInitializer_OpenFunction + !
	pointerof IOFileCloseObject typeinit@ ObTypeInitializer_CloseFunction + !
	pointerof IOFileDeleteObject typeinit@ ObTypeInitializer_DeleteFunction + !
	typeinit@ ObTypeCreate ok! type!

	if (ok@)
		ok@ "IOInitPhase1: couldn't create File type (%i)\n" KeCrash
	end

	type@ IOFileTypeObject!

	// initialize mount list mutex

	"IOMountListMutex" // name
	KERNELMODE // mode
	IOMountListMutex // mutex
	KeMutexInitialize ok!

	if (DEBUGCHECKS)
		if (ok@)
			"IOInitPhase1: couldn't initialize IOMountListMutex\n" KeCrash
		end
	end

	IOCacheInit

	// initialize drivers

	STAGE_THREAD HALLoaderInfo@ HALDriverInit

	auto thhandle

	0 // context1
	0 // context2
	pointerof IOFilesystemSyncWorker // startfunc
	ACCESS_OWNER_ALL // permissions
	"FSSync" // name
	0 // processhandle
	PsSystemProcess@ // processptr
	PsThreadCreate ok! thhandle!

	if (ok@)
		ok@ "IOInitPhase1: couldn't create 'FSSync' thread (%i)\n" KeCrash
	end

	thhandle@ ObObjectClose ok!

	if (ok@)
		ok@ "IOInitPhase1: couldn't close 'FSSync' thread (%i)\n" KeCrash
	end

	0 // context1
	0 // context2
	pointerof IOModifiedPageWorker // startfunc
	ACCESS_OWNER_ALL // permissions
	"ModifiedWriter" // name
	0 // processhandle
	PsSystemProcess@ // processptr
	PsThreadCreate ok! thhandle!

	if (ok@)
		ok@ "IOInitPhase1: couldn't create 'ModifiedWriter' thread (%i)\n" KeCrash
	end

	thhandle@ ObObjectClose ok!

	if (ok@)
		ok@ "IOInitPhase1: couldn't close 'ModifiedWriter' thread (%i)\n" KeCrash
	end

	IOBootDeviceMount
end

fn IOBootDeviceMount { -- }
	auto bootdevpath
	64 alloc bootdevpath!

	bootdevpath@ "//:/Devices/" strcpy
	bootdevpath@ 12 + HALLoaderBootDeviceName@ strcpy
	
	bootdevpath@ "boot device: %s\n" "IOBootDeviceMount" HALLog

	auto bootdevhandle
	auto ok

	0 // flags
	ACCESS_ALL // access
	-1 // initialobjecthandle
	bootdevpath@ // path
	ObObjectOpenByPath ok! bootdevhandle!

	if (ok@)
		ok@ "IOBootDeviceMount: inaccessible boot device (%i)\n" KeCrash
	end

	auto mount

	OSMOUNT_READONLY // flags
	bootdevhandle@ // handle
	0 // fsname (any)
	IOFilesystemMount ok! mount!

	if (ok@)
		ok@ "IOBootDeviceMount: failed to mount boot device (%i)\n" KeCrash
	end

	auto bootfile

	IOFileTypeObject@ // type
	bootdevhandle@ // handle
	ObObjectReferenceByHandle ok! bootfile! drop

	if (ok@)
		ok@ "IOBootDeviceMount: failed to ref boot device file (%i)\n" KeCrash
	end

	bootfile@ IOFile_FileControlBlock + @ IOFileControlBlock_DeviceObject + @ IOBootDevice!

	bootfile@ ObObjectDereferenceByPointer drop

	bootdevhandle@ ObObjectClose ok!

	if (ok@)
		ok@ "IOBootDeviceMount: failed to close boot device (%i)\n" KeCrash
	end

	mount@ IOMount_Filesystem + @ IOFilesystem_Name + @ "mounted read-only as: %s\n" "IOBootDeviceMount" HALLog
end