#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALDebug.h"
#include "<inc>/HALDriver.h"
#include "<inc>/HALMap.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/Object.h"

#include "<inc>/Process.h"

#include "<inc>/Security.h"

#include "<inc>/IO.h"

#include "<ll>/OSDLL/OS.h"

var IOFilesystemListHead 0
public IOFilesystemListHead

var IOMountListHead 0
public IOMountListHead

fn IOFilesystemRegister { filesystem -- ok }
	// assumes being run single-threaded (i.e. in a DriverInit routine)...

	0 ok!

	IOFilesystemListHead@ filesystem@ IOFilesystem_Next + !
	filesystem@ IOFilesystemListHead!
end

fn IOMountListLock { -- ok }
	KERNELMODE // waitmode
	1 // alertable
	OSWAIT_TIMEOUTINFINITE // timeout
	IOMountListMutex // object
	KeThreadWaitForObject ok!
end

fn IOMountListLockUnalertable { -- }
	auto ok

	KERNELMODE // waitmode
	0 // alertable
	OSWAIT_TIMEOUTINFINITE // timeout
	IOMountListMutex // object
	KeThreadWaitForObject ok!

	if (DEBUGCHECKS)
		if (ok@)
			ok@ "IOMountListLockUnalertable: failed to lock mount list (%i)\n" KeCrash
		end
	end
end

fn IOMountListUnlock { -- }
	IOMountListMutex KeMutexRelease drop
end

fn IOFilesystemMount { flags handle fsname -- mount ok }
	auto fileobject

	auto access

	IOFileTypeObject@ // type
	handle@ // handle
	ObObjectReferenceByHandle ok! fileobject! access!

	if (ok@)
		return
	end

	access@ // access
	ACCESS_READ // permission
	SeCheckAccess ok!

	if (ok@)
		fileobject@ ObObjectDereferenceByPointer drop

		return
	end

	if (flags@ OSMOUNT_READONLY & ~~)
		access@ // access
		ACCESS_WRITE // permission
		SeCheckAccess ok!

		if (ok@)
			fileobject@ ObObjectDereferenceByPointer drop

			return
		end
	end

	flags@ // flags
	fileobject@ // fileobject
	fsname@ // fsname
	IOMountObject ok! mount!

	fileobject@ ObObjectDereferenceByPointer drop
end

fn IOMountObject { flags fileobject fsname -- mount ok }
	auto fcb
	fileobject@ IOFile_FileControlBlock + @ fcb!

	auto filetype
	fcb@ IOFileControlBlock_FileType + @ filetype!

	if (filetype@ OSFILETYPE_CHARDEVICE ==)
		STATUS_IO_NOT_SUPPORTED ok!

		return
	end elseif (filetype@ OSFILETYPE_DIRECTORY ==)
		STATUS_IS_A_DIRECTORY ok!

		return
	end elseif (filetype@ OSFILETYPE_FILE ==)
		STATUS_IO_NOT_SUPPORTED ok!

		return
	end

	auto filesystem
	0 filesystem!

	if (fsname@)
		IOFilesystemListHead@ filesystem!

		while (filesystem@)
			if (filesystem@ IOFilesystem_Name + @ fsname@ strcmp)
				break
			end

			filesystem@ IOFilesystem_Next + @ filesystem!
		end

		if (filesystem@ ~~)
			STATUS_IO_NO_SUCH_FILESYSTEM ok!

			return
		end
	end

	auto rs
	HALCPUInterruptDisable rs!

	if (fcb@ IOFileControlBlock_Mount + @)
		rs@ HALCPUInterruptRestore

		STATUS_IO_DEVICE_BUSY ok!

		return
	end elseif (fcb@ IOFileControlBlock_Busy + @)
		rs@ HALCPUInterruptRestore

		STATUS_IO_TRY_AGAIN_LATER ok!

		return
	end elseif (fcb@ IOFileControlBlock_ParseCount + @)
		rs@ HALCPUInterruptRestore

		STATUS_IO_TRY_AGAIN_LATER ok!

		return
	end

	1 fcb@ IOFileControlBlock_Busy + !

	rs@ HALCPUInterruptRestore

	IOMount_SIZEOF // bytes
	'IOMt' // tag
	MmAllocWithTag ok! mount!

	if (ok@)
		0 fcb@ IOFileControlBlock_Busy + !

		return
	end

	0 mount@ IOMount_Next + !
	0 mount@ IOMount_Prev + !

	0 mount@ IOMount_FSContext + !
	fileobject@ mount@ IOMount_VolumeFile + !
	0 mount@ IOMount_RootFCB + !
	flags@ mount@ IOMount_Flags + !

	STATUS_IO_BAD_FILESYSTEM ok!

	auto mountfunc

	if (filesystem@ ~~)
		// no filesystem was explicitly given.
		// try any

		IOFilesystemListHead@ filesystem!

		while (filesystem@)
			filesystem@ mount@ IOMount_Filesystem + !
			
			if (filesystem@ IOFilesystem_Flags + @ IOFSFLAG_NOAUTO & ~~)
				filesystem@ IOFilesystem_MountFunction + @ mountfunc!

				if (DEBUGCHECKS)
					if (mountfunc@ ~~)
						"IOMountObject: filesystem had no mount function 1\n" KeCrash
					end
				end

				mount@ // mount
				mountfunc@ IOFilesystemMountFunction ok!

				if (ok@ 0 ==)
					// successfully mounted as this filesystem

					break
				end
			end

			filesystem@ IOFilesystem_Next + @ filesystem!
		end
	end else
		filesystem@ mount@ IOMount_Filesystem + !

		filesystem@ IOFilesystem_MountFunction + @ mountfunc!

		if (DEBUGCHECKS)
			if (mountfunc@ ~~)
				"IOMountObject: filesystem had no mount function 2\n" KeCrash
			end
		end

		mount@ // mount
		mountfunc@ IOFilesystemMountFunction ok!
	end

	if (ok@)
		// did not successfully mount

		mount@ MmFree

		0 fcb@ IOFileControlBlock_Busy + !

		return
	end

	mount@ fcb@ IOFileControlBlock_Mount + !

	// bias the reference count of the volume file object
	fileobject@ ObObjectReferenceByPointer drop

	IOMountListLockUnalertable

	// add to head of mount list

	auto h
	IOMountListHead@ h!

	if (h@)
		mount@ h@ IOMount_Prev + !
	end

	h@ mount@ IOMount_Next + !
	mount@ IOMountListHead!

	IOMountListUnlock

	0 fcb@ IOFileControlBlock_Busy + !
end

fn IOFilesystemUnmount { handle -- ok }
	auto fileobject

	auto access

	IOFileTypeObject@ // type
	handle@ // handle
	ObObjectReferenceByHandle ok! fileobject! access!

	if (ok@)
		return
	end

	access@ // access
	ACCESS_READ // permission
	SeCheckAccess ok!

	if (ok@)
		fileobject@ ObObjectDereferenceByPointer drop

		return
	end

	// don't allow this thread to receive signals while unmounting
	KeThreadCurrent@ KeThreadIgnoreKill drop

	fileobject@ // fileobject
	IOUnmountObject ok!

	KeThreadCurrent@ KeThreadAcceptKill drop

	fileobject@ ObObjectDereferenceByPointer drop
end

fn IOUnmountObject { fileobject -- ok }
	auto fcb
	fileobject@ IOFile_FileControlBlock + @ fcb!

	auto rs
	HALCPUInterruptDisable rs!

	auto mount
	fcb@ IOFileControlBlock_Mount + @ mount!

	if (mount@ ~~)
		rs@ HALCPUInterruptRestore

		STATUS_IO_NOT_SUPPORTED ok!

		return
	end elseif (fcb@ IOFileControlBlock_Busy + @)
		rs@ HALCPUInterruptRestore

		STATUS_IO_TRY_AGAIN_LATER ok!

		return
	end elseif (fcb@ IOFileControlBlock_ParseCount + @)
		rs@ HALCPUInterruptRestore

		STATUS_IO_TRY_AGAIN_LATER ok!

		return
	end

	1 fcb@ IOFileControlBlock_Busy + !

	rs@ HALCPUInterruptRestore

	auto filesystem
	mount@ IOMount_Filesystem + @ filesystem!

	auto unmountfunc
	filesystem@ IOFilesystem_UnmountFunction + @ unmountfunc!

	if (DEBUGCHECKS)
		if (unmountfunc@ ~~)
			"IOUnmountObject: filesystem had no unmount function\n" KeCrash
		end
	end

	IOMountListLockUnalertable

	mount@ // mount
	unmountfunc@ IOFilesystemUnmountFunction ok!

	if (ok@)
		// failed to unmount

		IOMountListUnlock

		0 fcb@ IOFileControlBlock_Busy + !

		return
	end

	// remove from mount list
	auto n
	mount@ IOMount_Next + @ n!

	if (n@)
		mount@ IOMount_Prev + @ n@ IOMount_Prev + !
	end

	auto p
	mount@ IOMount_Prev + @ p!

	if (p@)
		mount@ IOMount_Next + @ p@ IOMount_Next + !
	end else // no prev means we were the head
		mount@ IOMount_Next + @ IOMountListHead!
	end

	IOMountListUnlock

	auto volfile
	mount@ IOMount_VolumeFile + @ volfile!

	mount@ MmFree

	// unmounted successfully

	0 fcb@ IOFileControlBlock_Mount + !

	// unbias reference count of volume file object

	volfile@ ObObjectDereferenceByPointer drop

	0 fcb@ IOFileControlBlock_Busy + !
end

fn IOMountUpdateFlags { newflags handle -- mount ok }
	auto fileobject

	auto access

	IOFileTypeObject@ // type
	handle@ // handle
	ObObjectReferenceByHandle ok! fileobject! access!

	if (ok@)
		return
	end

	access@ // access
	ACCESS_READ // permission
	SeCheckAccess ok!

	if (ok@)
		fileobject@ ObObjectDereferenceByPointer drop

		return
	end

	if (newflags@ OSMOUNT_READONLY & ~~)
		access@ // access
		ACCESS_WRITE // permission
		SeCheckAccess ok!

		if (ok@)
			fileobject@ ObObjectDereferenceByPointer drop

			return
		end
	end

	newflags@ // newflags
	fileobject@ // fileobject
	IOMountUpdateFlagsObject ok!

	fileobject@ ObObjectDereferenceByPointer drop
end

fn IOMountUpdateFlagsObject { newflags fileobject -- ok }
	auto fcb
	fileobject@ IOFile_FileControlBlock + @ fcb!

	auto rs
	HALCPUInterruptDisable rs!

	auto mount
	fcb@ IOFileControlBlock_Mount + @ mount!

	if (mount@ ~~)
		rs@ HALCPUInterruptRestore

		STATUS_IO_NOT_SUPPORTED ok!

		return
	end elseif (fcb@ IOFileControlBlock_Busy + @)
		rs@ HALCPUInterruptRestore

		STATUS_IO_TRY_AGAIN_LATER ok!

		return
	end elseif (fcb@ IOFileControlBlock_ParseCount + @)
		rs@ HALCPUInterruptRestore

		STATUS_IO_TRY_AGAIN_LATER ok!

		return
	end

	1 fcb@ IOFileControlBlock_Busy + !

	rs@ HALCPUInterruptRestore

	auto oldflags
	mount@ IOMount_Flags + @ oldflags!

	if (oldflags@ newflags@ ==)
		0 fcb@ IOFileControlBlock_Busy + !

		return
	end

	auto filesystem
	mount@ IOMount_Filesystem + @ filesystem!

	auto updatefunc
	filesystem@ IOFilesystem_UpdateFlagsFunction + @ updatefunc!

	if (DEBUGCHECKS)
		if (updatefunc@ ~~)
			"IOMountUpdateFlagsObject: filesystem had no update flags function\n" KeCrash
		end
	end

	newflags@ // newflags
	oldflags@ // oldflags
	mount@ // mount
	updatefunc@ IOFilesystemUpdateFlagsFunction ok!

	if (ok@ ~~)
		newflags@ mount@ IOMount_Flags + !
	end

	0 fcb@ IOFileControlBlock_Busy + !
end

fn IOFilesystemSyncAll { -- ok }
	IOMountListLock ok!

	if (ok@)
		return
	end

	auto mount
	IOMountListHead@ mount!

	while (mount@)
		auto filesystem
		mount@ IOMount_Filesystem + @ filesystem!

		auto flushfunc
		filesystem@ IOFilesystem_FlushFunction + @ flushfunc!

		if (flushfunc@)
			mount@ // mount
			flushfunc@ IOFilesystemFlushFunction drop
		end

		mount@ IOMount_Next + @ mount!
	end

	IOMountListUnlock
end