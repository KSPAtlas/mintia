#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALDebug.h"
#include "<inc>/HALDriver.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

extern KeInterruptInit { -- }

extern MemInit { -- }

extern KeTimerInit { -- }

extern KeProcessInit { -- }

extern KeThreadInit { -- }

buffer KeProcessKernelThreadMain KeThread_SIZEOF

buffer KeProcessKernelThreadMainStack KETHREADSTACKSIZE

fn KeMain { -- ret }
	// early init that takes place before there's a process context
	// this function is called at IPLHIGH. lower IPL to start interrupts going.
	IPLDPC KeIPLLower

	KeInterruptInit

	KeTimerInit

	KeProcessInit

	KeThreadInit

	KeThreadNextPick KeThreadSwitch

	0 ret!
end

externptr HALLoaderInfo

fn KeIdleThread { -- }
	IPLLOW KeIPLLower // kernel threads start in IPLDPC

	// the idle thread is never ever not ready to run.
	// if it ever stops being ready to run, the system will do undefined
	// things and crash -- INCLUDING DURING PHASE 0 INITIALIZATION.

	"Hello Andromeda World!\n" "KeIdleThread" HALLog

	// initialize the executive layer

	ExInitPhase0

	// XXX move this to phase 1
	// STAGE_THREAD HALLoaderInfo@ HALDriverInit

	while (1)
		HALCPUHalt
	end
end