#include "<df>/dragonfruit.h"
#include "<inc>/HALLog.h"

#include "<inc>/HALCPU.h"
#include "<inc>/HALRTC.h"

#include "<inc>/KeCrash.h"

#include "<inc>/KeDPC.h"
#include "<inc>/KeTime.h"
#include "<inc>/KeDispatch.h"
#include "<inc>/KeTimer.h"

#include "<inc>/KeEvent.h"

#include "<inc>/KeProcess.h"

#include "<inc>/KeIPL.h"

#include "<ll>/OSDLL/OSStatus.h"

fn KeEventInitialize { signaled type name event -- ok }
	0 ok!

	if (type@ KEEVENT_SYNCH ==)
		DISPATCHOBJECT_EVENTSYNCH type!		
	end elseif (type@ KEEVENT_NOTIF ==)
		DISPATCHOBJECT_EVENTNOTIF type!
	end else
		"KeEventInitialize: what\n" KeCrash
	end

	name@ type@ event@ KeDispatchInitialize ok!

	if (ok@)
		return
	end

	signaled@ event@ KeDispatchHeader_Signaled + !
end

fn KeEventSignal { priboost event -- ok }
	0 ok!

	if (event@ KeDispatchHeader_Type + @ DISPATCHOBJECT_EVENTNOTIF ==)
		0 priboost@ event@ KeDispatchSatisfyAll ok! drop
	end elseif (event@ KeDispatchHeader_Type + @ DISPATCHOBJECT_EVENTSYNCH ==)
		auto wth

		0 priboost@ event@ KeDispatchSatisfyFirst ok! wth!

		if (wth@ ~~)
			1 event@ KeDispatchHeader_Signaled + !
		end
	end else
		"KeEventSignal: what\n" KeCrash
	end
end