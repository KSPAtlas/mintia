#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALCPU.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Object.h"

#include "<inc>/Memory.h"

#include "<inc>/Security.h"

#include "<ll>/OSDLL/OS.h"

fn ObObjectReferenceByPointer { object -- oldcount }
	ObHeader_SIZEOF object -=

	auto rs
	HALCPUInterruptDisable rs!

	object@ ObHeader_PointerCount + @ oldcount!

	oldcount@ 1 + object@ ObHeader_PointerCount + !

	rs@ HALCPUInterruptRestore
end

fn ObObjectDereferenceByPointer { object -- oldcount }
	ObHeader_SIZEOF object -=

	auto rs
	HALCPUInterruptDisable rs!

	object@ ObHeader_PointerCount + @ oldcount!

	if (DEBUGCHECKS)
		if (oldcount@ 0 ==)
			"ObObjectDereferenceByPointer: underflow\n" KeCrash
		end

		if (oldcount@ 1 - object@ ObHeader_HandleCount + @ <)
			"ObObjectDereferenceByPointer: pointer count < handle count\n" KeCrash
		end
	end

	oldcount@ 1 - object@ ObHeader_PointerCount + !

	rs@ HALCPUInterruptRestore

	auto ok

	if (oldcount@ 1 ==)
		// just decremented the pointer count to zero. delete the object

		if (KeIPLCurrentGet IPLLOW ==)
			// delete immediately

			object@ ObHeader_SIZEOF + ObObjectFree ok!

			if (DEBUGCHECKS)
				if (ok@)
					"ObObjectDereferenceByPointer: failed to free object\n" KeCrash
				end
			end
		end else
			// can't delete objects at >=IPLAPC, queue a work item

			"ObObjectDereferenceByPointer: work items NYI\n" KeCrash
		end
	end
end