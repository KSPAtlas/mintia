#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"
#include "<inc>/HALDebug.h"

#include "<inc>/Kernel.h"

#include "<inc>/Memory.h"

#include "<ll>/OSDLL/OSStatus.h"

fn MmKernelStackAlloc { -- kstack ok }
	FREEFIRST CANBLOCK | // priority
	MmPageAlloc ok! kstack! drop

	if (ok@)
		return
	end

	PAGESHIFT kstack <<=
	IDENTITYSPACE kstack |=
end

fn MmKernelStackFree { kstack -- }
	IDENTITYSPACE ~ kstack &=
	kstack@ PAGESHIFT >> MmPageFree
end

fn MmPageDirectoryAlloc { -- pdir ok }
	// XXX theres an arch-dependent assumption here that a page directory is
	// one pageframe in size

	ZEROMUST CANBLOCK | // priority
	MmPageAlloc ok! pdir! drop

	if (ok@)
		return
	end

	PAGESHIFT pdir <<=

	pdir@ // pagemap
	MmPageDirectoryInitialize
end

fn MmPageDirectoryFree { pdir -- }
	IDENTITYSPACE ~ pdir &=
	pdir@ PAGESHIFT >> MmPageFree
end