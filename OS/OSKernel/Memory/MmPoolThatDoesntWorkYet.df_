#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"
#include "<inc>/HALDebug.h"

#include "<inc>/Kernel.h"

#include "<inc>/Memory.h"

#include "<ll>/OSDLL/OSStatus.h"

buffer MmPoolSpaceBitmap 512

// The heap is managed within a 16MB region of kernel space called
// "pool space". Allocations less than a page size are handled by a linked-
// list allocator within pool pages. Allocations of a page size or more
// are handled by directly allocating pool pages.

fn MmHeapPrintTag { tag -- }

end

fn MmHeapCheck { -- }

end

fn MmHeapDumpBlockInfoHdr { block -- }

end

fn MmHeapDumpBlockInfo { block -- }

end

fn MmHeapDumpBuckets { -- }

end


fn MmAllocWithTag { bytes tag -- ptr ok }
	if (DEBUGCHECKS)
		if (MmInited@ ~~)
			"MmAllocWithTag: used before MemInit called\n" KeCrash
		end
	end

	if (bytes@ PAGESIZE >=)
		bytes@ // bytes
		tag@ // tag
		MmPoolPageAlignedAlloc ok! ptr!

		return
	end
end

fn MmFree { ptr -- }
	if (DEBUGCHECKS)
		if (MmInited@ ~~)
			"MmFree: used before MemInit called\n" KeCrash
		end

		if (ptr@ -1 ==)
			"MmFree: tried to free -1 pointer\n" KeCrash
		end
	end

	if (ptr@ ~~)
		"MmFree: tried to free null pointer\n" KeCrash
	end


end

fn MmChargeBytesGet { bytes -- charge }

end

fn MmBlockChargeGet { block -- charge }

end