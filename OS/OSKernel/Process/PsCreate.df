#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/Object.h"

#include "<inc>/Security.h"

#include "<inc>/Process.h"

#include "<ll>/OSDLL/OS.h"

#include "<inc>/HALCPU.h"

#include "<inc>/HALDebug.h"

fn PsProcessCreate { permissions name -- processhandle ok }
	auto current
	KeProcessCurrent current!

	auto process

	name@ // name
	0 // flags
	permissions@ // permissions
	SeUserCurrentGet // owninguser
	PsProcess_SIZEOF // bodysize
	PsProcessObjectType@ // type
	ObObjectCreate ok! process!

	if (ok@)
		return
	end

	current@ PsProcess_OwningUser + @ process@ PsProcess_OwningUser + !

	auto quotablock
	current@ PsProcess_QuotaBlock + @ quotablock!

	quotablock@ MmQuotaBlockReference
	quotablock@ process@ PsProcess_QuotaBlock + !

	auto handletable

	process@ // chargedprocess
	OBHANDLEENTRYSIZELOG // entrysizelog
	ExHandleTableCreate ok! handletable!

	if (ok@)
		quotablock@ MmQuotaBlockDereference

		process@ ObObjectDeallocate

		return
	end

	handletable@ process@ PsProcess_HandleTable + !

	name@ process@ KeProcessInitialize ok!

	if (ok@)
		quotablock@ MmQuotaBlockDereference

		0 handletable@ ExHandleTableDelete

		process@ ObObjectDeallocate

		return
	end

	// put it on the global process list

	auto rs
	HALCPUInterruptDisable rs!

	auto h

	PsProcessListHead@ h!

	if (h@)
		process@ h@ PsProcess_GlobalListPrev + !
		h@ process@ PsProcess_GlobalListNext + !
	end

	process@ PsProcessListHead!

	rs@ HALCPUInterruptRestore

	ACCESS_ALL process@ ObObjectOpen ok! processhandle!

	if (ok@)
		process@ ObObjectDereferenceByPointer drop

		return
	end
end