#include "<df>/dragonfruit.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALDebug.h"
#include "<inc>/HALDriver.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/IO.h"

#include "<ll>/OSDLL/OS.h"

fn FSVolumeRead { length bufsize offset buf mount -- bytesread ok }
	auto volfcb
	mount@ IOMount_VolumeFile + @ IOFile_FileControlBlock + @ volfcb!

	auto readfunc
	volfcb@ IOFileControlBlock_DispatchTable + @ IODispatchTable_Read + @ readfunc!

	if (readfunc@ ~~)
		STATUS_IO_NOT_SUPPORTED ok!

		return
	end

	OSWAIT_TIMEOUTINFINITE // timeout
	OSACCESSFLAG_BLOCK // flags
	length@ // length
	bufsize@ // bufsize
	offset@ // offset
	buf@ // buffer
	volfcb@ // fcb
	KERNELMODE // lastmode
	readfunc@ IODispatchReadFunction ok! bytesread!
end

fn FSVolumeWrite { length bufsize offset buf mount -- byteswritten ok }
	auto volfcb
	mount@ IOMount_VolumeFile + @ IOFile_FileControlBlock + @ volfcb!

	auto writefunc
	volfcb@ IOFileControlBlock_DispatchTable + @ IODispatchTable_Write + @ writefunc!

	if (writefunc@ ~~)
		STATUS_IO_NOT_SUPPORTED ok!

		return
	end

	OSACCESSFLAG_BLOCK // flags
	length@ // length
	bufsize@ // bufsize
	offset@ // offset
	buf@ // buffer
	volfcb@ // fcb
	KERNELMODE // lastmode
	writefunc@ IODispatchWriteFunction ok! byteswritten!
end