#include "<df>/dragonfruit.h"

#include "<ll>/OSDLL/OS.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALDriver.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALLIMNstationCitron.h"
#include "<inc>/HALInterrupt.h"

#include "<inc>/Kernel.h"

#include "<inc>/IO.h"

table DriverSerialDispatch
	pointerof DriverSerialOpen           // open
	pointerof DriverSerialClose          // close
	pointerof DriverSerialIOControl      // iocontrol
	pointerof DriverSerialRead           // read
	pointerof DriverSerialWrite          // write
	0                                    // system control
	0                                    // parse
	0                                    // create
	0                                    // flush
	0                                    // delete object
	0                                    // set information
	0                                    // get information
	0                                    // rename
	0
	0
	0
	0
	0
	0
	0
	0
	0
	0
endtable

table DriverSerial
	IOVERSION_MAJOR                      // ioversion major
	IOVERSION_MINOR                      // ioversion minor

	"serial"                             // name
	OSDEVICE_CHAR                        // type
	pointerof DriverSerialDispatch       // dispatch table
	0                                    // extension size
endtable

fn (FDriverInit) DriverInit { stage -- ok }
	if (stage@ STAGE_THREAD ==)
		auto dev

		"SerialPort0" // name
		DriverSerial // driver
		ACCESS_ALL // permissions
		IODeviceCreate ok! dev!
	end

	0 ok!
end

fn (IODispatchOpenFunction) DriverSerialOpen { object -- ok }
	"hi open\n" Printf

	0 ok!
end

fn (IODispatchCloseFunction) DriverSerialClose { object -- ok }
	"hi close\n" Printf

	0 ok!
end

fn (IODispatchIOControlFunction) DriverSerialIOControl { arg1 arg2 arg3 arg4 object -- ok }
	0 ok!
end

fn (IODispatchReadFunction) DriverSerialRead { flags length bufsize offset buffer object -- bytesread ok }
	"DriverSerialRead: implement me\n" KeCrash
end

fn (IODispatchWriteFunction) DriverSerialWrite { flags length bufsize offset buffer object -- byteswritten ok }
	"DriverSerialWrite: implement me\n" KeCrash
end