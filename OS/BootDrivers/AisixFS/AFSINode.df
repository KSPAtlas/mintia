#include "<df>/dragonfruit.h"

#include "<ll>/rta3x/a3x.h"

#include "<ll>/OSDLL/OS.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALDriver.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALLIMNstationCitron.h"
#include "<inc>/HALInterrupt.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/IO.h"

#include "<inc>/FSRTL.h"

#include "AisixFS.h"

fn AFSINodeRead { inum mount -- ptr pfdbe ok }
	auto block
	auto off

	auto inode

	inum@ AFSINode_SIZEOF * off!

	mount@ IOMount_FSContext + @ AFSData_IStart + @ off@ AFSBLOCKSHIFT >> + AFSBLOCKSHIFT << block!

	0 // flags
	block@ // offset
	mount@ // mount
	FSVolumeBlockRead ok! pfdbe! ptr!

	if (ok@)
		return
	end

	off@ AFSBLOCKOFFMASK & ptr +=
end
