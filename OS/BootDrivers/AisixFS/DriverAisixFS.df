#include "<df>/dragonfruit.h"

#include "<ll>/rta3x/a3x.h"

#include "<ll>/OSDLL/OS.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALDriver.h"
#include "<inc>/HALRTC.h"
#include "<inc>/HALLIMNstationCitron.h"
#include "<inc>/HALInterrupt.h"
#include "<inc>/HALCPU.h"
#include "<inc>/HALMap.h"

#include "<inc>/Kernel.h"

#include "<inc>/Executive.h"

#include "<inc>/Memory.h"

#include "<inc>/IO.h"

#include "<inc>/FSRTL.h"

table DriverAFSFilesystem
	0                              // next
	0                              // prev

	"AisixFS"                      // name
	pointerof DriverAFSDispatch    // dispatchtable

	pointerof DriverAFSMount       // mountfunction
	pointerof DriverAFSUnmount     // unmountfunction
	pointerof DriverAFSFlush       // flushfunction

	0                              // reserved
	0                              // reserved
	0                              // reserved
	0                              // reserved
	0                              // reserved
	0                              // reserved
	0                              // reserved
endtable

table DriverAFSDispatch
	0                                    // open
	0                                    // close
	0                                    // iocontrol
	0                                    // read
	0                                    // write
	0                                    // system control
	0                                    // parse
	0                                    // create
	0                                    // flush
	0                                    // delete object
	0                                    // set information
	0                                    // get information
	0                                    // rename
	0                                    // readblock
	0                                    // writeblock
	0                                    // grow
	0                                    // reserved
	0                                    // reserved
	0                                    // reserved
	0                                    // reserved
	0                                    // reserved
	0                                    // reserved
	0                                    // reserved
endtable

const AFSBLOCKSIZE 4096

fn (FDriverInit) DriverInit { stage -- ok }
	if (stage@ STAGE_THREAD ==)
		DriverAFSFilesystem // filesystem
		IOFilesystemRegister ok!

		if (ok@)
			return
		end
	end

	0 ok!
end

struct AFSSuperblock
	4 Version
	4 Magic
	4 Dirty
	4 NumReservedBlocks
	4 FATStart
	4 FATSize
	4 IStart
	4 ICount
	4 DataStart
	4 DataSize
	4 VolSize
endstruct

struct AFSData
	4 FATStart
	4 FATSize
	4 IStart
	4 ICount
	4 VolSize
	4 LastFreeBlock
endstruct

const AFSSUPERBLOCKMAGIC   0xAFBBAFBB
const AFSSUPERBLOCKVERSION 0x6

fn (IOFilesystemMountFunction) DriverAFSMount { mount -- ok }
	auto superblockpfn
	FREEFIRST // priority
	MmPageAlloc ok! superblockpfn! drop

	auto pageframe
	superblockpfn@ PAGESHIFT << IDENTITYSPACE | pageframe!

	auto bytesread

	AFSBLOCKSIZE // length
	AFSBLOCKSIZE // bufsize
	0 // offset
	pageframe@ // buffer
	mount@ // mount
	FSVolumeRead ok! bytesread!

	if (ok@)
		superblockpfn@ MmPageFree

		return
	end

	if (bytesread@ AFSBLOCKSIZE ~=)
		superblockpfn@ MmPageFree

		STATUS_IO_BAD_FILESYSTEM ok!

		return
	end

	if (pageframe@ AFSSuperblock_Magic + @ AFSSUPERBLOCKMAGIC ~=)
		superblockpfn@ MmPageFree

		STATUS_IO_BAD_FILESYSTEM ok!

		return
	end

	if (pageframe@ AFSSuperblock_Version + @ AFSSUPERBLOCKVERSION ~=)
		superblockpfn@ MmPageFree

		STATUS_IO_BAD_FILESYSTEM ok!

		return
	end

	auto afsdata

	AFSData_SIZEOF // bytes
	'AFSD' // tag
	MmAllocWithTag ok! afsdata!

	if (ok@)
		superblockpfn@ MmPageFree

		return
	end

	pageframe@ AFSSuperblock_FATStart + @ afsdata@ AFSData_FATStart + !
	pageframe@ AFSSuperblock_FATSize + @ afsdata@ AFSData_FATSize + !
	pageframe@ AFSSuperblock_IStart + @ afsdata@ AFSData_IStart + !
	pageframe@ AFSSuperblock_ICount + @ afsdata@ AFSData_ICount + !
	pageframe@ AFSSuperblock_VolSize + @ afsdata@ AFSData_VolSize + !
	0 afsdata@ AFSData_LastFreeBlock + !

	afsdata@ mount@ IOMount_FSContext + !

	superblockpfn@ MmPageFree

	0 ok!
end

fn (IOFilesystemUnmountFunction) DriverAFSUnmount { mount -- ok }
	0 ok!
end

fn (IOFilesystemFlushFunction) DriverAFSFlush { mount -- ok }
	0 ok!
end