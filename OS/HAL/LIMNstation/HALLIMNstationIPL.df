#include "<ll>/rta3x/a3x.h"
#include "<df>/dragonfruit.h"
#include "../../Loader/LoaderGlobal.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALLIMNstationCitron.h"

#include "<inc>/HALIPL.h"

#include "<inc>/HALInterrupt.h"

#include "<inc>/HALCPU.h"

#include "<inc>/HALCrash.h"

table HALLIMNstationIPLMasks
	//   32-63      00-31
	0x00000000 0x00000000 // 00: IPLLOW
	0x00000000 0x00000000 // 01: IPLAPC
	0x00000000 0x00000000 // 02: IPLDPC
	0x00000000 0x00000000 // 03:

	0xFFFF0000 0x00000000 // 04: IPLINTERACTIVE (mask out amanatsu)
	0xFFFFFFFF 0xFFFF0000 // 05: IPLBOARDS (mask out ebus)
	0xFFFFFFFF 0xFFFFFFF0 // 06: IPLSERIAL (mask out serial ports)
	0xFFFFFFFF 0xFFFFFFF8 // 07: IPLDISK (mask out satsuma)
	0xFFFFFFFF 0xFFFFFFFE // 08: IPLDMA (mask out dma (all except clock))

	0xFFFFFFFF 0xFFFFFFFE // 09:
	0xFFFFFFFF 0xFFFFFFFE // 10:
	0xFFFFFFFF 0xFFFFFFFE // 11:
	0xFFFFFFFF 0xFFFFFFFE // 12:
	0xFFFFFFFF 0xFFFFFFFE // 13:
	0xFFFFFFFF 0xFFFFFFFE // 14:
	0xFFFFFFFF 0xFFFFFFFE // 15:
	0xFFFFFFFF 0xFFFFFFFE // 16:
	0xFFFFFFFF 0xFFFFFFFE // 17:
	0xFFFFFFFF 0xFFFFFFFE // 18:
	0xFFFFFFFF 0xFFFFFFFE // 19:
	0xFFFFFFFF 0xFFFFFFFE // 20:
	0xFFFFFFFF 0xFFFFFFFE // 21:
	0xFFFFFFFF 0xFFFFFFFE // 22:
	0xFFFFFFFF 0xFFFFFFFE // 23:
	0xFFFFFFFF 0xFFFFFFFE // 24:
	0xFFFFFFFF 0xFFFFFFFE // 25:
	0xFFFFFFFF 0xFFFFFFFE // 26:
	0xFFFFFFFF 0xFFFFFFFE // 27:
	0xFFFFFFFF 0xFFFFFFFE // 28:

	0xFFFFFFFF 0xFFFFFFFF // 29: IPLCLOCK
	0xFFFFFFFF 0xFFFFFFFF // 30:
	0xFFFFFFFF 0xFFFFFFFF // 31: IPLHIGH
endtable

var HALLIMNstationLSICBase 0

struct LSIC
	4 Mask00_31
	4 Mask32_63
	4 Interrupting00_31
	4 Interrupting32_63
	4 ClaimComplete
endstruct

var HALLIMNstationLSICClaimComplete 0
public HALLIMNstationLSICClaimComplete

fn HALPlatformIPLSet { ipl -- }
	auto lsic
	HALLIMNstationLSICBase@ lsic!

	auto iplb
	ipl@ 1 << iplb!

	[iplb@]HALLIMNstationIPLMasks@ lsic@ LSIC_Mask32_63 + !
	[iplb@ 1 +]HALLIMNstationIPLMasks@ lsic@ LSIC_Mask00_31 + !
end

table HALLIMNstationInterruptHandlers[(64 2 *)]
public HALLIMNstationInterruptHandlers

fn HALLIMNstationLSICInit { ldrinfo -- }
	ldrinfo@ LoaderInfo_PlatformInfo + @ LoaderInfoPlatform_LSICBase + @ HALLIMNstationLSICBase!

	HALLIMNstationLSICBase@ LSIC_ClaimComplete + HALLIMNstationLSICClaimComplete!

	IPLHIGH HALPlatformIPLSet

	auto i
	0 i!

	while (i@ 64 <)
		pointerof HALLIMNstationInterruptSpurious [i@ 2 *]HALLIMNstationInterruptHandlers!

		1 i +=
	end
end

fn HALPlatformInterruptRegister { handler int ipl -- }
	if ([int@ 2 *]HALLIMNstationInterruptHandlers@ pointerof HALLIMNstationInterruptSpurious ~=)
		int@ "HALPlatformInterruptRegister: attempt to register IRQ #%d twice\n" HALCrash
	end

	handler@ [int@ 2 *]HALLIMNstationInterruptHandlers!
	ipl@ [int@ 2 * 1 +]HALLIMNstationInterruptHandlers!
end

fn HALPlatformInterruptUnregister { int -- }
	auto spf
	pointerof HALLIMNstationInterruptSpurious spf!

	if ([int@ 2 *]HALLIMNstationInterruptHandlers@ spf@ ==)
		int@ "HALPlatformInterruptUnregister: attempt to unregister IRQ #%d; wasn't registered\n" HALCrash
	end

	spf@ [int@ 2 *]HALLIMNstationInterruptHandlers!
end

fn (HALInterruptHandler) HALLIMNstationInterruptSpurious { int -- }
	int@ "spurious interrupt: %d\n" HALCrash
end