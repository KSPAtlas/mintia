#include "<ll>/rta3x/a3x.h"
#include "<df>/dragonfruit.h"
#include "../../Loader/LoaderGlobal.h"

#include "<inc>/HALExit.h"

#include "<inc>/HALDriver.h"

#include "<inc>/HALCPU.h"

#include "<inc>/HALMap.h"

#include "<inc>/HALCrash.h"

extern HALMain { ldrinfo -- ret }

externptr HALLoaderInfo

// gluing with rta3x
fn Main { ldrinfo args -- ret }
	ldrinfo@ HALMain ret!
end

var InfoTotalRAM 0

var HALPlatformKernelPageDirectory 0
public HALPlatformKernelPageDirectory

var HALLIMNstationDKSBuffer 0
public HALLIMNstationDKSBuffer

fn HALPlatformInfo { -- }
	// we're supposed to print platform info in this function

	InfoTotalRAM@ 1048576 / HALLoaderInfo@ LoaderInfo_PlatformInfo + @ LoaderInfoPlatform_PlatformModel + @ "%s (%dMB) " Printf
	HALLoaderInfo@ LoaderInfo_PlatformInfo + @ LoaderInfoPlatform_BusModel + @ "%s " Printf
	HALLoaderInfo@ LoaderInfo_PlatformInfo + @ LoaderInfoPlatform_CPUModel + @ "%s " Printf
end

extern HALCPUInit { -- }

extern HALLIMNstationCitronInit { ldrinfo -- }

extern HALLIMNstationLSICInit { ldrinfo -- }

fn HALPlatformInit { ldrinfo -- ret }
	0 ret!

	ldrinfo@ LoaderInfo_PageDirectory + @ HALPlatformKernelPageDirectory!

	ldrinfo@ LoaderInfo_TotalRAM + @ InfoTotalRAM!

	HALPlatformInfo

	HALCPUInit

	ldrinfo@ HALLIMNstationCitronInit

	ldrinfo@ HALLIMNstationLSICInit

	ldrinfo@ LoaderInfo_PlatformInfo + @ LoaderInfoPlatform_DKSBuffer + @ HALLIMNstationDKSBuffer!
end

fn HALPlatformCrash { -- }
	HALPlatformMapKernelSwitch drop drop
end

extern HALLimn2500Exit { code sp -- }

extern HALLimn2500Reset { -- }

extern HALCPUExit { -- }

fn HALPlatformExit { ret mode -- }
	// MUST BE CALLED WITH INTERRUPTS DISABLED

	HALPlatformMapKernelSwitch drop drop

	HALCPUExit

	if (mode@ HALEXIT_SHUTDOWN ==)
		ret@ HALLoaderInfo@ LoaderInfo_ReturnSP + @ HALLimn2500Exit
	end elseif (mode@ HALEXIT_REBOOT ==)
		HALLimn2500Reset
	end else
		"?" Printf

		HALLimn2500Reset
	end
end