#include "<ll>/rta3x/a3x.h"
#include "<df>/dragonfruit.h"
#include "../../Loader/LoaderGlobal.h"

#include "<inc>/HALExit.h"

#include "<inc>/HALDriver.h"

#include "<inc>/HALCPU.h"

extern HALMain { ldrinfo -- ret }

// gluing with rta3x
fn Main { ldrinfo args -- ret }
	ldrinfo@ HALMain ret!
end

var InfoTotalRAM 0

fn HALPlatformInfo { -- }
	// we're supposed to print platform info in this function
	"/platform" a3xDeviceSelect
		InfoTotalRAM@ 1048576 / "model" a3xDGetProperty "%s (%dMB) " Printf
	a3xDeviceExit

	"/bus" a3xDeviceSelect
		"model" a3xDGetProperty "%s " Printf
	a3xDeviceExit

	"/cpu" a3xDeviceSelect
		"model" a3xDGetProperty "%s" Printf
	a3xDeviceExit
end

extern HALCPUInit { -- }

extern HALLIMNstationCitronInit { -- }

extern HALLIMNstationLSICInit { -- }

fn HALPlatformInit { ldrinfo -- ret }
	0 ret!

	ldrinfo@ LoaderInfo_TotalRAM + @ InfoTotalRAM!

	HALPlatformInfo

	HALCPUInit

	HALLIMNstationCitronInit

	HALLIMNstationLSICInit

	auto dll
	ldrinfo@ LoaderInfo_DLLListHead + @ dll!

	while (dll@)
		if (dll@ DLL_DriverDeviceNode + @)
			if (dll@ DLL_DriverInitEarly + @)
				dll@ DLL_DriverDeviceNode + @ a3xDeviceSelectNode
					0 0 0 0 dll@ DLL_DriverInitEarly + @ FDriverInitEarly drop
				a3xDeviceExit
			end
		end

		dll@ DLL_Next + @ dll!
	end

	HALCPUInterruptEnable
end

extern HALCPUExit { -- }

fn HALPlatformExit { ret mode -- }
	HALCPUExit

	if (mode@ HALEXIT_SHUTDOWN ==)
		ret@ a3xReturn
	end elseif (mode@ HALEXIT_REBOOT ==)
		"/cpu" a3xDeviceSelect
			"reset" a3xDCallMethod drop drop drop drop
		a3xDeviceExit
	end else
		"?" Printf

		"/cpu" a3xDeviceSelect
			"reset" a3xDCallMethod drop drop drop drop
		a3xDeviceExit
	end
end