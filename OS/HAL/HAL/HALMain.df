#include "<df>/dragonfruit.h"
#include "../../Loader/LoaderGlobal.h"

#include "<inc>/HALLog.h"
#include "<inc>/HALExit.h"

extern HALArgsInit { ldrinfo -- }

extern HALResourceInit { ldrinfo -- ret }

extern HALConsoleInit { ldrinfo -- }

extern HALPlatformInit { ldrinfo -- ret }

extern HALResourceTest { -- }

extern HALResourceJettison { ldrinfo -- }

extern HALPlatformExit { ret mode -- }

extern HALDebugInit { ldrinfo -- }

fnptr KeMain { -- ret }

var HALLoaderInfo 0
public HALLoaderInfo

var HALLoaderPFDB 0
public HALLoaderPFDB

var HALLoaderInitialBitmap 0
public HALLoaderInitialBitmap

var HALLoaderInitialBitmapSize 0
public HALLoaderInitialBitmapSize

var HALLoaderTotalRAM 0
public HALLoaderTotalRAM

fn HALMain { ldrinfo -- ret }
	0 ret!

	ldrinfo@ HALLoaderInfo!

	ldrinfo@ HALArgsInit

	ldrinfo@ HALResourceInit ret!
	if (ret@)
		return
	end

	ldrinfo@ HALConsoleInit

	ldrinfo@ LoaderInfo_PageFrameDB + @ HALLoaderPFDB!

	ldrinfo@ LoaderInfo_InitMemBmp + @ HALLoaderInitialBitmap!

	ldrinfo@ LoaderInfo_InitMemBmpSz + @ HALLoaderInitialBitmapSize!

	ldrinfo@ LoaderInfo_TotalRAM + @ HALLoaderTotalRAM!

	if (ldrinfo@ LoaderInfo_Major + @ LOADERMAJOR ~=)
		ldrinfo@ LoaderInfo_Major + @ LOADERMAJOR "LOADERMAJOR mismatch: expected %d, was given %d.\n" "HALMain" HALLog
		"Andromeda can't be booted with this loader.\n" "HALMain" HALLog
		-1 ret!
		return
	end elseif (ldrinfo@ LoaderInfo_Minor + @ LOADERMINOR ~=)
		ldrinfo@ LoaderInfo_Minor + @ LOADERMINOR "LOADERMINOR mismatch: expected %d, was given %d.\n" "HALMain" HALLog
		"Will proceed, but there may be unexpected behavior.\n" "HALMain" HALLog
	end

	"Andromeda is awake!\n" "HALMain" HALLog

	"Platform: " "HALMain" HALLog
	ldrinfo@ HALPlatformInit ret!
	if (ret@)
		return
	end

	"\n\n" Printf

	ldrinfo@ HALDebugInit

	ldrinfo@ HALResourceJettison

	"\n" Printf

	ldrinfo@ LoaderInfo_KeMain + @ KeMain ret!

	ret@ HALEXIT_SHUTDOWN HALExit
end

fn HALExit { ret mode -- }
	ret@ mode@ "Exit (%d): %i.\n" "HALExit" HALLog

	ret@ mode@ HALPlatformExit
end